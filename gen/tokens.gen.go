// Code generated by lexgen; DO NOT EDIT.
package twig

import "fmt"

// TokenType represents a token type
type TokenType int

// Token types
const (
	T_EOF TokenType = iota
	T_TEXT
	T_VAR_START
	T_VAR_END
	T_BLOCK_START
	T_BLOCK_END
	T_IDENT
	T_STRING
	T_NUMBER
	T_OPERATOR
	T_PUNCTUATION
)

// Token represents a token in the lexer
type Token struct {
	Type  TokenType
	Value string
	Line  int
	Col   int
}

func (t Token) String() string {
	var typeName string
	switch t.Type {
	case T_EOF:
		typeName = "EOF"
	case T_TEXT:
		typeName = "TEXT"
	case T_VAR_START:
		typeName = "VAR_START"
	case T_VAR_END:
		typeName = "VAR_END"
	case T_BLOCK_START:
		typeName = "BLOCK_START"
	case T_BLOCK_END:
		typeName = "BLOCK_END"
	case T_IDENT:
		typeName = "IDENT"
	case T_STRING:
		typeName = "STRING"
	case T_NUMBER:
		typeName = "NUMBER"
	case T_OPERATOR:
		typeName = "OPERATOR"
	case T_PUNCTUATION:
		typeName = "PUNCTUATION"
	default:
		typeName = fmt.Sprintf("UNKNOWN(%d)", t.Type)
	}
	return fmt.Sprintf("%s(%q)", typeName, t.Value)
}